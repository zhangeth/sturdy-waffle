name: Postman Workflow

on: workflow_dispatch

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: yarn install
    - name: Run Initial Scripts and Build
      run: yarn run build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Get test API Gateway endpoint
      env:
        ENDPOINT: ${{ env.ENDPOINT }}
      run: |
        endpoint=$(aws apigatewayv2 get-apis --query 'Items[?contains(Name, `test-${{ vars.SERVICE_NAME }}`)].ApiEndpoint' --output text)
        echo "ENDPOINT=$endpoint" >> $GITHUB_ENV
    - name: Newman Action
      run: newman run test/jsonschema-serverless-crud.postman_collection.json  --environment test/jsonschema-serverless-crud.postman_environment.json --env-var "server_url=${{ env.ENDPOINT }}" --env-var "sampleRequest=$(cat test/sampleRequest.json)"

env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  GOOG_CLIENT_ID: ${{ secrets.GOOG_CLIENT_ID }}
  GOOG_CLIENT_SECRET: ${{ secrets.GOOG_CLIENT_SECRET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  APP_NAME: ${{ vars.APP }}
  ROOT_DOMAIN: ${{ vars.ROOT_DOMAIN }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}
  ORG_NAME: ${{ vars.ORG }}
  JSCHEMA: ${{ vars.JSCHEMA }}
  UISCHEMA: ${{ vars.UISCHEMA }}